@model OnlineExamSystem.Models.CourseVM.CourseUpdateVm
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-heading">
    <h1 class="page-title">Course Edit</h1>
    <div class="clf">
        <ul class="nav nav-tabs tabs-line nav-fill">
            <li class="nav-item">
                <button type="button" id="GetCourseUpdate" class="nav-link active col-lg-12" data-toggle="tab"><i class="fa fa-line-chart"></i> Basic Information</button>
            </li>
            <li class="nav-item">
                <button type="button" id="GetCourseAssignTrainer" class="nav-link col-lg-12" data-toggle="tab"><i class="fa fa-heartbeat"></i> Assign Trainers</button>
            </li>
            <li class="nav-item">
                <button type="button" id="GetCourseCreateExam" class="nav-link col-lg-12" data-toggle="tab"><i class="fa fa-life-ring"></i> Create Exams</button>
            </li>
        </ul>
    </div>
</div>
<div class="page-content fade-in-up ">
    <div class="row" id="LoadCourseEditPartial">
        <div id="BasicInfo" class="col-md-6">
            <div class="ibox">
                <div class="ibox-head">
                    <div class="ibox-title">Basic Information</div>
                    <div class="ibox-tools">
                        <a class="ibox-collapse"><i class="fa fa-minus"></i></a>
                        <a class="fullscreen-link"><i class="fa fa-expand"></i></a>
                    </div>
                </div>
                <div class="ibox-body">
                    <form class="form-horizontal" method="post">
                        <input type="hidden" class="hidden" name="status" value="update"/>
                        @Html.ValidationSummary(true, null, htmlAttributes: new {@class = "alert alert-danger alert-bordered", @role = "alert"})
                        @if (ViewBag.Message == "Updated")
                        {
                            <div class="alert alert-success" role="alert">
                                Organization has been saved succesfully!
                            </div>
                        }
                        else if (ViewBag.Message == "Failed")
                        {
                            <div class="alert alert-warning" role="alert">
                                Please! Try again later!
                            </div>
                        }
                        @Html.AntiForgeryToken()
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Organization, htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-md-9">
                                @Html.DisplayFor(c => c.Organization.Name)
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(c => c.Name, "Course Name", htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Name, htmlAttributes: new {@class = "form-control", @placeholder = "Course Name"})
                                @Html.ValidationMessageFor(c => c.Name, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Code, "Course Code", htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Code, htmlAttributes: new {@class = "form-control", @placeholder = "Code"})
                                @Html.ValidationMessageFor(c => c.Code, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Duration, htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                <div class="input-group">
                                    @Html.TextBoxFor(c => c.Duration, htmlAttributes: new {@class = "form-control", @placeholder = "Duration"})
                                    <div class="input-group-addon bg-white">Months</div>
                                </div>
                                @Html.ValidationMessageFor(c => c.Duration, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Credit, htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Credit, htmlAttributes: new {@class = "form-control", @placeholder = "Credit"})
                                @Html.ValidationMessageFor(c => c.Credit, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Fees, htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                <div class="input-group">
                                    <div class="input-group-addon bg-white">৳</div>
                                    @Html.TextBoxFor(c => c.Fees, htmlAttributes: new {@class = "form-control", @placeholder = "Fees"})
                                </div>
                                @Html.ValidationMessageFor(c => c.Fees, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Outline, htmlAttributes: new {@class = "col-sm-3 col-form-label"})
                            <div class="col-sm-9">
                                @Html.TextAreaFor(c => c.Outline, htmlAttributes: new {@class = "form-control", @placeholder = "Outline", @rows = "4"})
                                @Html.ValidationMessageFor(c => c.Outline, null, htmlAttributes: new {@class = "text-muted text-danger"})
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-9 ml-sm-auto">
                                <input type="submit" value="Update" class="btn btn-success" id="CourseUpdate"/>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>